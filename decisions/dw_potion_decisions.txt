targeted_decisions = {
    # Give NPC Futa Potion
	dw_give_npc_futa_potion = {
		filter = court_including_me
		ai_target_filter = court_including_me
		from_potential = {
			has_character_modifier = dw_futa_potion
		}
		potential = {
			is_female = yes
			NOT = { trait = futa }
		}
		allow = {
			is_female = yes
			NOT = { trait = futa }
		}
		effect = {
			save_event_target_as = dw_potion_target
			if = {
				limit = {
					OR = {
						trait = trusting
						trait = lustful
						prisoner = yes
						AND = {
							FROM = { trait = mind_control }
							has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
						}
					}
				}
				add_trait = futa
			}
			else_if = {
				limit = {
					trait = paranoid
				}
				FROM = { narrative_event = { id = dw_wizardtower.399 }}
			}
			else = {
				random_list = {
					50 = { add_trait = futa }
					50 = { FROM = { narrative_event = { id = dw_wizardtower.399 }} }
				}
			}
			FROM = { remove_character_modifier = dw_futa_potion }
		}
		ai_will_do = {
			factor = 0.1
			modifier = {
				factor = 0
				ai = no # We don't want the ai giving potions to the player
			}
			modifier = {
				factor = 10 # ten times as likely to give to a sure target
				OR = {
					trait = trusting
					trait = lustful
					prisoner = yes
					AND = {
						FROM = { trait = mind_control }
						has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
					}
				}
			}
		}
	}
	# Give NPC Symbiote Poition
	dw_give_npc_symbiote_potion = {
		filter = court_including_me
		ai_target_filter = court_including_me
		from_potential = {
			has_character_modifier = dw_symbiote_potion
		}
		potential = {
			always = yes
		}
		allow = {
			NOT = { trait = tentacle }
		}
		effect = {
			save_event_target_as = dw_potion_target
			if = {
				limit = {
					OR = {
						trait = trusting
						trait = lunatic
						prisoner = yes
						AND = {
							FROM = { trait = mind_control }
							has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
						}
					}
				}
				add_trait = tentacle
			}
			else_if = {
				limit = {
					trait = paranoid
				}
				FROM = { narrative_event = { id = dw_wizardtower.399 }}
			}
			else = {
				random_list = {
					50 = { add_trait = tentacle }
					50 = { FROM = { narrative_event = { id = dw_wizardtower.399 }} }
				}
			}
			FROM = { remove_character_modifier = dw_symbiote_potion }
		}
		ai_will_do = {
			factor = 0.1
			modifier = {
				factor = 0
				ai = no # We don't want the ai giving potions to the player
			}
			modifier = {
				factor = 10 # ten times as likely to give to a sure target
				OR = {
					trait = trusting
					trait = lunatic
					prisoner = yes
					AND = {
						FROM = { trait = mind_control }
						has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
					}
				}
			}
		}
	}
	# Give NPC Gender Swap Poition
	dw_give_npc_gender_swap_potion = {
		filter = court_including_me
		ai_target_filter = court_including_me
		from_potential = {
			has_character_modifier = dw_gender_swap_potion
		}
		potential = {
			always = yes
		}
		allow = {
			always = yes
		}
		effect = {
			save_event_target_as = dw_potion_target
			if = {
				limit = {
					OR = {
						trait = trusting
						trait = homosexual
						trait = trap
						prisoner = yes
						AND = {
							FROM = { trait = mind_control }
							has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
						}
					}
				}
				dw_gender_swap = yes
			}
			else_if = {
				limit = {
					trait = paranoid
				}
				FROM = { narrative_event = { id = dw_wizardtower.399 }}
			}
			else = {
				random_list = {
					50 = { dw_gender_swap = yes }
					50 = { FROM = { narrative_event = { id = dw_wizardtower.399 }} }
				}
			}
			FROM = { remove_character_modifier = dw_gender_swap_potion }
		}
		ai_will_do = {
			factor = 0.1
			modifier = {
				factor = 0
				ai = no # We don't want the ai giving potions to the player
			}
			modifier = {
				factor = 10 # ten times as likely to give to a sure target
				OR = {
					trait = trusting
					trait = homosexual
					trait = trap
					prisoner = yes
					AND = {
						FROM = { trait = mind_control }
						has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
					}
				}
			}
		}
	}
	# Give NPC Youthfulness Poition
	dw_give_npc_youthfulness_potion = {
		filter = court_including_me
		ai_target_filter = court_including_me
		from_potential = {
			has_character_modifier = dw_youthfulness_potion
		}
		potential = {
			practical_age = 26
		}
		allow = {
			practical_age = 26
		}
		effect = {
			save_event_target_as = dw_potion_target
			if = {
				limit = {
					OR = {
						trait = trusting
						trait = fair
						trait = proud
						trait = envious
						prisoner = yes
						AND = {
							FROM = { trait = mind_control }
							has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
						}
					}
				}
				add_age = -10
			}
			else_if = {
				limit = {
					trait = paranoid
				}
				FROM = { narrative_event = { id = dw_wizardtower.399 }}
			}
			else = {
				random_list = {
					50 = { add_age = -10 }
					50 = { FROM = { narrative_event = { id = dw_wizardtower.399 }} }
				}
			}
			FROM = { remove_character_modifier = dw_youthfulness_potion }
		}
		ai_will_do = {
			factor = 0.1
			modifier = {
				factor = 0
				ai = no # We don't want the ai giving potions to the player
			}
			modifier = {
				factor = 10 # ten times as likely to give to a sure target
				OR = {
					trait = trusting
					trait = fair
					trait = proud
					trait = envious
					prisoner = yes
					AND = {
						FROM = { trait = mind_control }
						has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
					}
				}
			}
		}
	}
	# Give NPC Breast Expansion Poition
	dw_give_npc_breast_expansion_potion = {
		filter = court_including_me
		ai_target_filter = court_including_me
		from_potential = {
			has_character_modifier = dw_breast_expansion_potion
		}
		potential = {
			is_female = yes
			NOT = { trait = dw_gigantic_tits }
		}
		allow = {
			is_female = yes
			NOT = { trait = dw_gigantic_tits }
		}
		effect = {
			save_event_target_as = dw_potion_target
			if = {
				limit = {
					OR = {
						trait = trusting
						trait = envious
						prisoner = yes
						AND = {
							FROM = { trait = mind_control }
							has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
						}
					}
				}
				dw_breast_growth = yes
			}
			else_if = {
				limit = {
					trait = paranoid
				}
				FROM = { narrative_event = { id = dw_wizardtower.399 }}
			}
			else = {
				random_list = {
					50 = { dw_breast_growth = yes }
					50 = { FROM = { narrative_event = { id = dw_wizardtower.399 }} }
				}
			}
			FROM = { remove_character_modifier = dw_breast_expansion_potion }
		}
		ai_will_do = {
			factor = 0.1
			modifier = {
				factor = 0
				ai = no # We don't want the ai giving potions to the player
			}
			modifier = {
				factor = 10 # ten times as likely to give to a sure target
				OR = {
					trait = trusting
					trait = envious
					prisoner = yes
					AND = {
						FROM = { trait = mind_control }
						has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
					}
				}
			}
		}
	}
	# Give NPC Cock Growth Poition
	dw_give_npc_cock_growth_potion = {
		filter = court_including_me
		ai_target_filter = court_including_me
		from_potential = {
			has_character_modifier = dw_cock_growth_potion
		}
		potential = {
			OR = {
				is_female = no
				trait = futa
			}
			NOT = { trait = dw_gigantic_dick }
		}
		allow = {
			OR = {
				is_female = no
				trait = futa
			}
			NOT = { trait = dw_gigantic_dick }
		}
		effect = {
			save_event_target_as = dw_potion_target
			if = {
				limit = {
					OR = {
						trait = trusting
						trait = envious
						prisoner = yes
						AND = {
							FROM = { trait = mind_control }
							has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
						}
					}
				}
				dw_cock_growth = yes
			}
			else_if = {
				limit = {
					trait = paranoid
				}
				FROM = { narrative_event = { id = dw_wizardtower.399 }}
			}
			else = {
				random_list = {
					50 = { dw_cock_growth = yes }
					50 = { FROM = { narrative_event = { id = dw_wizardtower.399 }} }
				}
			}
			FROM = { remove_character_modifier = dw_cock_growth_potion }
		}
		ai_will_do = {
			factor = 0.1
			modifier = {
				factor = 0
				ai = no # We don't want the ai giving potions to the player
			}
			modifier = {
				factor = 10 # ten times as likely to give to a sure target
				OR = {
					trait = trusting
					trait = envious
					prisoner = yes
					AND = {
						FROM = { trait = mind_control }
						has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
					}
				}
			}
		}
	}
	# Give NPC Minor Healing Poition
	dw_give_npc_minor_health_potion = {
		filter = court_including_me
		ai_target_filter = court_including_me
		from_potential = {
			has_character_modifier = dw_minor_healing_potion
		}
		potential = {
			always = yes
		}
		allow = {
			always = yes
		}
		effect = {
			save_event_target_as = dw_potion_target
			if = {
				limit = {
					OR = {
						trait = paranoid
						trait = zealous
					}
				}
				FROM = { narrative_event = { id = dw_wizardtower.399 }}
			}
			else = {
				do_minor_healing = yes
			}
			FROM = { remove_character_modifier = dw_minor_healing_potion }
		}
		ai_will_do = {
			factor = 0.5
			modifier = {
				factor = 0
				ai = no # We don't want the ai giving potions to the player
			}
		}
	}
	# Give NPC Major Healing Poition
	dw_give_npc_major_health_potion = {
		filter = court_including_me
		ai_target_filter = court_including_me
		from_potential = {
			has_character_modifier = dw_major_healing_potion
		}
		potential = {
			always = yes
		}
		allow = {
			always = yes
		}
		effect = {
			save_event_target_as = dw_potion_target
			if = {
				limit = {
					OR = {
						trait = paranoid
						trait = zealous
					}
				}
				FROM = { narrative_event = { id = dw_wizardtower.399 }}
			}
			else = {
				do_major_healing = yes
			}
			FROM = { remove_character_modifier = dw_major_healing_potion }
		}
		ai_will_do = {
			factor = 0.5
			modifier = {
				factor = 0
				ai = no # We don't want the ai giving potions to the player
			}
		}
	}
	# Give NPC Beauty Poition
	dw_give_npc_beauty_potion = {
		filter = court_including_me
		ai_target_filter = court_including_me
		from_potential = {
			has_character_modifier = dw_beauty_potion
		}
		potential = {
			always = yes
		}
		allow = {
			always = yes
		}
		effect = {
			save_event_target_as = dw_potion_target
			if = {
				limit = {
						trait = paranoid
				}
				FROM = { narrative_event = { id = dw_wizardtower.399 }}
			}
			else = {
				improve_looks = yes
			}
			FROM = { remove_character_modifier = dw_beauty_potion }
		}
		ai_will_do = {
			factor = 0.5
			modifier = {
				factor = 0
				ai = no # We don't want the ai giving potions to the player
			}
		}
	}
	# Give NPC Oblivion Poition
	dw_give_npc_oblivion_potion = {
		filter = court_including_me
		ai_target_filter = court_including_me
		from_potential = {
			has_character_modifier = dw_oblivion_potion
		}
		potential = {
			always = yes
		}
		allow = {
			always = yes
		}
		effect = {
			save_event_target_as = dw_potion_target
			if = {
				limit = {
					OR = {
						trait = ambitious
						trait = envious
						trait = greedy
						prisoner = yes
						AND = {
							FROM = { trait = mind_control }
							has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
						}
					}
				}
				experience_oblivion = yes
			}
			else_if = {
				limit = {
					OR = {
						trait = paranoid
						trait = content
						trait = craven
					}
				}
				FROM = { narrative_event = { id = dw_wizardtower.399 }}
			}
			else = {
				random_list = { # Lower than normal odds of a npc using it
					20 = { experience_oblivion = yes }
					80 = { FROM = { narrative_event = { id = dw_wizardtower.399 }} }
				}
			}
			FROM = { remove_character_modifier = dw_oblivion_potion }
		}
		ai_will_do = {
			factor = 0.1
			modifier = {
				factor = 0
				ai = no # We don't want the ai giving potions to the player
			}
			modifier = {
				factor = 10 # ten times as likely to give to a sure target
				OR = {
					trait = ambitious
					trait = envious
					trait = greedy
					prisoner = yes
					AND = {
						FROM = { trait = mind_control }
						has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
					}
				}
			}
		}
	}
	# Give NPC Giant Growth Poition
	dw_give_npc_giant_growth_potion = {
		filter = court_including_me
		ai_target_filter = court_including_me
		from_potential = {
			has_character_modifier = dw_giant_growth_potion
		}
		potential = {
			NOT = { trait = giant }
		}
		allow = {
			NOT = { trait = giant }
		}
		effect = {
			save_event_target_as = dw_potion_target
			if = {
				limit = {
					OR = {
						is_tribal = yes
						prisoner = yes
						AND = {
							FROM = { trait = mind_control }
							has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
						}
					}
				}
				random_list = {
					80 = { apply_giant_growth = yes }
					20 = { FROM = { narrative_event = { id = dw_wizardtower.399 }} }
				}
			}
			else = {
				random_list = { # Lower than normal odds of a npc using it
					20 = { apply_giant_growth = yes }
					80 = { FROM = { narrative_event = { id = dw_wizardtower.399 }} }
				}
			}
			FROM = { remove_character_modifier = dw_giant_growth_potion }
		}
		ai_will_do = {
			factor = 0.1
			modifier = {
				factor = 0
				ai = no # We don't want the ai giving potions to the player
			}
			modifier = {
				factor = 10 # ten times as likely to give to a sure target
				OR = {
					is_tribal = yes
					prisoner = yes
					AND = {
						FROM = { trait = mind_control }
						has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
					}
				}
			}
		}
	}
	# Give NPC Awaken Heritage Potion
	dw_give_npc_awaken_heritage_potion = {
		filter = court_including_me
		ai_target_filter = court_including_me
		from_potential = {
			has_character_modifier = dw_awaken_heritage_potion
		}
		potential = {
			always = yes
		}
		allow = {
			always = yes
		}
		effect = {
			save_event_target_as = dw_potion_target
			if = {
				limit = {
					OR = {
						trait = trusting
						trait = mystic
						prisoner = yes
						AND = {
							FROM = { trait = mind_control }
							has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
						}
					}
				}
				apply_heritage_awakening = yes
			}
			else = {
				random_list = {
					50 = { apply_heritage_awakening = yes }
					50 = { FROM = { narrative_event = { id = dw_wizardtower.399 }} }
				}
			}
			FROM = { remove_character_modifier = dw_awaken_heritage_potion }
		}
		ai_will_do = {
			factor = 0.1
			modifier = {
				factor = 0
				ai = no # We don't want the ai giving potions to the player
			}
			modifier = {
				factor = 10 # ten times as likely to give to a sure target
				OR = {
					trait = trusting
					trait = mystic
					prisoner = yes
					AND = {
						FROM = { trait = mind_control }
						has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
					}
				}
			}
		}
	}
	# Give NPC Elder Blood Potion
	dw_give_npc_elder_blood_potion = {
		filter = court_including_me
		ai_target_filter = court_including_me
		from_potential = {
			has_character_modifier = dw_elder_blood_potion
		}
		potential = {
			NOT = { trait = vampire }
			NOT = { trait = immortal }
		}
		allow = {
			NOT = { trait = vampire }
			NOT = { trait = immortal }
		}
		effect = {
			save_event_target_as = dw_potion_target
			if = {
				limit = {
					OR = {
						trait = cruel
						trait = impaler
						prisoner = yes
						AND = {
							FROM = { trait = mind_control }
							has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
						}
					}
				}
				consume_elder_blood = yes
			}
			else_if = {
				limit = {
					trait = paranoid
					trait = zealous
				}
				FROM = { narrative_event = { id = dw_wizardtower.399 }}
			}
			else = {
				random_list = {
					20 = { consume_elder_blood = yes }
					80 = { FROM = { narrative_event = { id = dw_wizardtower.399 }} }
				}
			}
			FROM = { remove_character_modifier = dw_elder_blood_potion }
		}
		ai_will_do = {
			factor = 0.1
			modifier = {
				factor = 0
				ai = no # We don't want the ai giving potions to the player
			}
			modifier = {
				factor = 10 # ten times as likely to give to a sure target
				OR = {
					trait = cruel
					trait = impaler
					prisoner = yes
					AND = {
						FROM = { trait = mind_control }
						has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
					}
				}
			}
		}
	}
	# Give NPC Love Potion
	dw_give_npc_love_potion = {
		filter = court_including_me
		ai_target_filter = court_including_me
		from_potential = {
			has_character_modifier = dw_love_potion
		}
		potential = {
			NOT = { is_lover = FROM }
			is_adult = yes
		}
		allow = {
			NOT = { is_lover = FROM }
			is_adult = yes
		}
		effect = {
			save_event_target_as = dw_potion_target
			if = {
				limit = {
					OR = {
						trait = trusting
						trait = lustful
						trait = poet
						prisoner = yes
						AND = {
							FROM = { trait = mind_control }
							has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
						}
					}
				}
				add_lover = FROM
			}
			else_if = {
				limit = {
					trait = paranoid
				}
				FROM = { narrative_event = { id = dw_wizardtower.399 }}
			}
			else = {
				random_list = {
					25 = { add_lover = FROM }
					75 = { FROM = { narrative_event = { id = dw_wizardtower.399 }} }
				}
			}
			FROM = { remove_character_modifier = dw_love_potion }
		}
		ai_will_do = {
			factor = 0.1
			modifier = {
				factor = 0
				ai = no # We don't want the ai giving potions to the player
			}
			modifier = {
				factor = 10 # ten times as likely to give to a sure target
				OR = {
					trait = trusting
					trait = lustful
					trait = poet
					prisoner = yes
					AND = {
						FROM = { trait = mind_control }
						has_opinion_modifier = { who = FROM  modifier = dw_mind_control_obedience }
					}
				}
			}
		}
	}
    #Hermione's Love Potion (chance the target may consume it and become the player's lover)
	dw_hermione_love_potion = {
		filter = all
		ai_target_filter = court
		from_potential = { # From is the person targeting the person to evoke the decision
			has_character_flag = dw_has_hermione_love_potion
		}
		potential = { # This is where we check the target to ensure they're valid
			NOT = { character = FROM } # We don't want to target ourselves by accident
			is_within_diplo_range = FROM # The target should be within the diplomatic range of the 'caster' for targeting purposes
			is_adult = yes # Don't want to create any odd results from giving it to a kid.
		}
		allow = {
			NOT = { # We want to ensure we can find them
				trait = in_hiding
			}
		}
		effect = {
			FROM = { clr_character_flag = dw_has_hermione_love_potion } # we remove it immediately so no one can target multiples before finishing the first event
			FROM = { narrative_event = { id = dw_wizardtower.5261 } }
		}
		ai_will_do = {
			factor = 0.5 # 50% chance the ai chooses to do this if they ever have that chance
		}
	}
    # Werewolf Blood potion
	dw_werewolf_blood_potion_td = { # td = targeted decision - which was added to break a naming conflict with the character modifier.
		filter = all
		ai_target_filter = court
		from_potential = { # From is the person targeting the person to evoke the decision
			has_character_modifier = dw_werewolf_blood_potion
		}
		potential = { # This is where we check the target to ensure they're valid
			is_within_diplo_range = FROM # The target should be within the diplomatic range of the 'caster' for targeting purposes
		}
		allow = {
			NOT = { # We want to ensure we can find them
				trait = in_hiding
			}
			trait = werekin
		}
		effect = {
			FROM = { clr_character_flag = dw_werewolf_blood_potion } # we remove it immediately so no one can target multiples before finishing the first event
			remove_trait = werekin
			add_trait = werewolf
		}
		ai_will_do = {
			factor = 1.0 # 100% chance the ai chooses to do this if they ever have that chance
		}
	}
    # Give NPC Mana Potion
	dw_give_npc_mana_potion = {
		filter = court_including_me
		ai_target_filter = court_including_me
		from_potential = {
			has_character_modifier = dw_mana_potion
		}
		potential = {
			always = yes
		}
		allow = {
			trait = mage # Doesn't make sense to use a mana potion if the person isn't a mage
		}
		effect = {
            clear_mana_cooldowns = yes
		}
		ai_will_do = {
			factor = 1
		}
	}
}
