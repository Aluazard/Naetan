## DWCore.8000 - .8999 Birth, Childhood, Adulthood special checks

namespace = DWCore

# .1 Sets a global flag of Dark_World_Reborn_Present for those who build mods that want to check for the presence of this mod
character_event = {
	id = DWCore.1
	is_triggered_only = yes # triggered via on_action
	hide_window = yes # nothing to see here
	trigger = {
		NOT = { has_global_flag = Dark_World_Reborn_Present }
	}
	immediate = {
		set_global_flag = Dark_World_Reborn_Present
	}
}


## .8000 - .8999 Birth, Childhood, Adulthood special checks
# .8000 Checking racial trait assignment at birth
character_event = {
	id = DWCore.8000
	is_triggered_only = yes # Triggered by on_action
	hide_window = yes # Nothing to see here
	trigger = {
		OR = {
			mother_even_if_dead = {
				is_a_dw_purebreed = yes
			}
			father_even_if_dead = {
				is_father_real_father = yes
				is_a_dw_purebreed = yes
			}
			real_father_even_if_dead = {
				is_a_dw_purebreed = yes
			}
		}
	}
	immediate = {
		# Werewolf related trait check
		if = { # Full blooded
			limit = {
				OR = {
					real_father_even_if_dead = {
						OR = {
							trait = werewolf
							trait = werewolf_ancient
							trait = werekin # a halfbreed male mating with a full breed female is the only way to recover a purebreed line
						}
					}
					father_even_if_dead = {
						OR = {
							trait = werewolf
							trait = werewolf_ancient
							trait = werekin # a halfbreed male mating with a full breed female is the only way to recover a purebreed line
						}
					}
				}
				mother_even_if_dead = {
					OR = {
						trait = werewolf
						trait = werewolf_ancient
						# A werekin mother cannot birth a true werewolf, thus a challenge to the werewolf clans, and why female werewolves are so important
					}
				}
			}
			add_trait = werewolf
		}
		else_if = { # Half breed
			limit = {
				OR = {
					real_father_even_if_dead = {
						OR = {
							trait = werewolf
							trait = werewolf_ancient
							trait = werekin
						}
					}
					father_even_if_dead = {
						OR = {
							trait = werewolf
							trait = werewolf_ancient
							trait = werekin
						}
					}
					mother_even_if_dead = {
						OR = {
							trait = werewolf
							trait = werewolf_ancient
							trait = werekin
						}
					}
				}
			}
			add_trait = werekin
		}
		# Vampire related trait check
		if = { # Full blooded
			limit = {
				# Dhampir's are not intended to somehow mate to breed true vampires, thus why they're absent from this section.
				OR = {
					real_father_even_if_dead = {
						OR = {
							trait = vampire
							trait = vampire_ancient
						}
					}
					father_even_if_dead = {
						OR = {
							trait = vampire
							trait = vampire_ancient
						}
					}
				}
				mother_even_if_dead = {
					OR = {
						trait = vampire
						trait = vampire_ancient
					}
				}
			}
			add_trait = vampire
		}
		else_if = { # Half breed
			limit = {
				OR = {
					real_father_even_if_dead = {
						OR = {
							trait = vampire
							trait = vampire_ancient
							trait = dhampir
						}
					}
					father_even_if_dead = {
						OR = {
							trait = vampire
							trait = vampire_ancient
							trait = dhampir
						}
					}
					mother_even_if_dead = {
						OR = {
							trait = vampire
							trait = vampire_ancient
							trait = dhampir
						}
					}
				}
			}
			add_trait = dhampir
		}
		# Succubus/Incubus related trait check
		if = { # Full blooded
			limit = {
				OR = {
					real_father_even_if_dead = {
						OR = {
							trait = incubus
							trait = lilith # just in case it was a futa that did the deed
						}
					}
					father_even_if_dead = {
						OR = {
							trait = incubus
							trait = lilith # just in case it was a futa that did the deed
						}
					}
				}
				mother_even_if_dead = {
					trait = lilith
				}
			}
			if = {
				limit = { is_female = yes }
				add_trait = lilith
			}
			else = {
				add_trait = incubus
			}
		}
		else_if = { # 50% Full blooded if only one parent = alter if a half breed child of lilith created
			limit = {
				OR = {
					real_father_even_if_dead = {
						OR = {
							trait = incubus
							trait = lilith # just in case it was a futa that did the deed
						}
					}
					father_even_if_dead = {
						OR = {
							trait = incubus
							trait = lilith # just in case it was a futa that did the deed
						}
					}
					mother_even_if_dead = {
						trait = lilith
					}
				}
			}
			if = {
				limit = {
					is_female = yes
					random > 50
				}
				add_trait = lilith
			}
			else_if = {
				limit = {
					is_female = no
					random > 50
				}
				add_trait = incubus
			}
		}
		# Seeing if the child receives a lethal trait combination
		if = {
			limit = {
				trait = werewolf
				trait = vampire
			}
			mother = { narrative_event = { id = DWCore.8007 days = 1 }} #Baby dies due to incompatibility of werewolf and vampire blood
		}
	}
}
# .8007 Child dies due to werewolf/vampire blood incompatibility (Mother)
narrative_event = {
	id = DWCore.8007
	desc = "DWCore8007"
	picture = "mother_crying"
	title = dw_death_of_child
	is_triggered_only = yes
	option = {
		name = DWCore8007A
		FROM = {
			death = {
				death_reason = death_poor_health
			}
		}
	}
}

# .8010 Checks new adult to see if they have a trait that warrants a custom portrait, or special adult modifier
character_event = {
	id = DWCore.8010
	is_triggered_only = yes # by on_adulthood on_action check
	trigger = { # This event should stop if one of the below checks is not present
		is_a_species_with_potential_custom_portrait = yes
	}
	hide_window = yes # Nothing to see here
	immediate = {
		### Special modifiers for adults
		# Werewolf adult to have to begin worrying about the beast whispers if they're not already hunting
		if = {
			limit = {
				trait = werewolf
				NOT = { has_character_modifier = dw_werewolf_hunt_cooldown }
			}
			add_character_modifier = { name = dw_werewolf_beast_whispers duration = -1 }
		}

		### Custom Portrait Assignments
		# Due to the corruptive nature of Tentacle-Kin, their portrait wins out above all others
		if = {
			limit = {
				trait = tentacle
			}
			add_random_tentacle_portrait = yes
		}
		# Werewolf trumps all save tentacle
		else_if = {
			limit = {
				trait = werewolf
			}
			add_random_werewolf_portrait = yes
		}
		# Orc trumps all save werewolf and tentacle
		else_if = {
			limit = {
				trait = orc
			}
			add_random_orc_portrait = yes
		}
		# Children of both an Elf and Neko, Elf holds an edge over Neko, although sometimes Neko takes dominance
		else_if = {
			limit = {
				trait = elf
				trait = neko
			}
			random_list = {
				75 = { add_random_elf_portrait = yes }
				25 = { add_random_neko_portrait = yes }
			}
		}
		# Child of only an Elf parent
		else_if = {
			limit = {
				trait = elf
			}
			add_random_elf_portrait = yes
		}
		# Child of a only Neko
		else_if = {
			limit = {
				trait = neko
			}
			add_random_neko_portrait = yes
		}
		# Some vampiric traits are strong enough to manifest, such as the ugle Nosferatu
		else_if = {
			limit = { trait = vampire }
			add_random_vampire_portrait = yes
		}
		# Kitsune trumps no one - due largely to it being more a spirit manifestation than physical entity, so mixed breeds of kitsune and something else would be extremely rare
		else_if = {
			limit = {
				trait = kitsune
			}
			add_random_kitsune_portrait = yes
		}
	}
}

## Serpents Purge - or any other child still birth magics
# .8200 Kills the child, removes the parents (hidden)
character_event = {
	id = DWCore.8200
	is_triggered_only = yes # Triggered by on_action
	hide_window = yes
	trigger = {
		mother = { has_character_flag = dw_purge_childbirth } # Ensures we only hit the proper child
	}
	immediate = {
		mother = { clr_character_flag = dw_purge_childbirth } # We remove the flag before we remove the mother - so the mother can to this again if necessary.
		set_father = 0
		set_mother = 0
		death ={
			death_reason = death_natural
		}
	}
}
