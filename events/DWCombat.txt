### Combat Event Chain

## Prior to routing an event here the below steps should be taken:
# the variable of varEvent should be set with the value of the return event.
# event_targets set-up for first_fighter and second_fighter

namespace = DWCombat

narrative_event = {
	id = DWCombat.01
	picture = a_placeholder
	title = dw_hunted_by_vampire_title
	is_triggered_only = yes # Various
	desc = { # Both are dead
		trigger = {
			event_target:first_fighter = { health <= first_combat_damage }
			event_target:second_fighter = { health <= second_combat_damage }
		}
		text = DWCombat01.0
		picture = vampire_dead_1
	}
	desc = { # Player is dead
		trigger = {
			event_target:first_fighter = { health <= first_combat_damage }
		}
		text = DWCombat01.1
		picture = vampire_feeds_nos_2
	}
	desc = { # Vampire is dead
		trigger = {
			event_target:second_fighter = { health <= second_combat_damage }
		}
		text = DWCombat01.2
		picture = vampire_dead_1
	}
	desc = { # The struggle continues - first wounds second - standard
		trigger = {
			event_target:first_fighter = { health > first_combat_damage }
			event_target:second_fighter = { health > second_combat_damage }
			event_target:first_fighter = { has_character_flag = dw_first_wounds_second_standard }
		}
		text = DWCombat01.3
		picture = vampire_injured_nos_1
	}
	desc = { # The struggle continues - second wounds first - standard
		trigger = {
			event_target:first_fighter = { health > first_combat_damage }
			event_target:second_fighter = { health > second_combat_damage }
			event_target:first_fighter = { has_character_flag = dw_second_wounds_first_standard }
		}
		text = DWCombat01.4
		picture = vampire_feeds_nos_2
	}
	desc = { # The struggle continues - both wounded - standard
		trigger = {
			event_target:first_fighter = { health > first_combat_damage }
			event_target:second_fighter = { health > second_combat_damage }
			event_target:first_fighter = { has_character_flag = dw_dual_wounds_standard }
		}
		text = DWCombat01.5
		picture = vampire_injured_nos_1
	}
	desc = { # The struggle continues
		trigger = {
			event_target:first_fighter = { health > first_combat_damage }
			event_target:second_fighter = { health > second_combat_damage }
			NOR = {
				event_target:first_fighter = { has_character_flag = dw_first_wounds_second_standard }
				event_target:first_fighter = { has_character_flag = dw_second_wounds_first_standard }
				event_target:first_fighter = { has_character_flag = dw_dual_wounds_standard }
			}
		}
		text = DWCombat01.9
		picture = vampire_injured_nos_1
	}
	option = { # Fight on
		trigger = {
			event_target:first_fighter = { health > first_combat_damage }
			event_target:second_fighter = { health > second_combat_damage }
		}
		name = DWCombat01A
		hidden_effect = {
			process_combat_round = yes
			# clear_combat_round_end_flags = yes
			narrative_event = { id = DWCombat.01}
		}
	}
	option = { # Player killed
		trigger = {
			event_target:first_fighter = { health <= first_combat_damage }
			NOT = { event_target:second_fighter = { health <= second_combat_damage } }
		}
		name = DWCombat01B
		death = { death_reason = death_murder killer = event_target:second_fighter }
		event_target:second_fighter = { banish = yes } # the vampire moves on after its kill
		hidden_effect = {
			clear_combat_end_flags = yes
		}
	}
	option = { # Vampire killed
		trigger = {
			event_target:second_fighter = { health <= second_combat_damage }
			NOT = { event_target:first_fighter = { health <= first_combat_damage } }
		}
		name = DWCombat01C
		event_target:second_fighter = { death = { death_reason = death_duel killer = ROOT } }
		hidden_effect = {
			clear_combat_end_flags = yes
		}
	}
	option = { # Both dead
		trigger = {
			event_target:first_fighter = { health <= first_combat_damage }
			event_target:second_fighter = { health <= second_combat_damage }
		}
		name = DWCombat01D
		death = { death_reason = death_murder killer = event_target:second_fighter }
		event_target:second_fighter = { death = { death_reason = death_duel killer = ROOT } }
		hidden_effect = {
			clear_combat_end_flags = yes
		}
	}
}
