### DWFairyTales is a Dark World spin on various, well, fairy tales.
## Not to self - search for TODO to see where I've potential place holder gaps
##DWFairyTales.1 - 99 Creation of characters for court
##DWFairyTales.100 -  Beauty and the Beast
##DWFairyTales.1000 - Snow White
##DWFairyTales.2000 - Alice in Wonderland
##DWFairyTales.9000 - 9999 Spending time with... (Gaston .9000)(Belle .9100)

namespace = DWFairyTales

# .2000 Player finds a sizeable rabbit hole.
narrative_event = {
	id = DWFairyTales.2000
	desc = "DWFairyTales2000"
	picture = wonderland_rabbit_hole
	title = dw_ck2_wonderland
	ai = no #We're going to make this a player only event since it ultimately has the chance of introducing NPC's into a court
	is_triggered_only = yes # Triggered by bi_yearly random on_action
	trigger = {
		NOT = { has_global_flag = dw_wonderland_triggered } # We don't want this happening more than once a play session
	}
	option = { # I'll help get you out
		trigger = {
			martial = 8
		}
		name = "DWFairyTales2000A"
		set_global_flag = dw_wonderland_triggered
		narrative_event = { id = DWFairyTales.2010 } # Successfully pulls her out
	}
	option = { # I'll help get you out
		trigger = {
			NOT = { martial = 8 }
		}
		name = "DWFairyTales2000A"
		narrative_event = { id = DWFairyTales.2005 } # Fails to pull her out
	}
	option = { # Not interesting in helping right now - doesn't set the global flag, so it has a chance to happen again in the future.
		name = "DWFairyTales2000B"
		narrative_event = { id = DWFairyTales.2009 }
	}
}
# .2005 Alice slips and falls back down the hole
narrative_event = {
	id = DWFairyTales.2005
	desc = "DWFairyTales2005"
	picture = wonderland_alice_falls
	title = dw_ck2_wonderland
	is_triggered_only = yes # Triggered by .2000
	option = { # Perhaps next time
		name = "DWFairyTales2005A"
	}
}
# .2009 Player leaves the rabbit hole behind
narrative_event = {
	id = DWFairyTales.2009
	desc = "DWFairyTales2009"
	picture = wonderland_rabbit_hole
	title = dw_ck2_wonderland
	is_triggered_only = yes # Triggered by .2000
	option = { # Perhaps next time
		name = "DWFairyTales2009A"
	}
}
# .2010 Player pulls out Alice
narrative_event = {
	id = DWFairyTales.2010
	desc = "DWFairyTales2010"
	picture = wonderland_alice_hole
	title = dw_ck2_wonderland
	is_triggered_only = yes # Triggered by .2000
	option = { # Poor thing, come with me to my court.
		name = "DWFairyTales2010A"
		character_event = { id = DWFairyTales.10 }
		hidden_tooltip = { character_event = { id = DWFairyTales.2011 days = 360 }}
	}
	option = { # This is too crazy. Off with you.
		name = "DWFairyTales2010B"
	}
}
# .2011 Hidden Random Event handler for when Alice is still alive and well
character_event = {
	id = DWFairyTales.2011
	is_triggered_only = yes # Triggered by .2010
	hide_window = yes # Nothing to see here
	immediate = {
		if = { # We first we find Alice and set her as an event target if she's present.
			limit = {
				any_courtier = {
					has_character_flag = dw_npc_alice
				}
			}
			random_courtier = {
				limit = {
					has_character_flag = dw_npc_alice
				}
				save_event_target_as = its_alice
			}
		}
		if = { # If we managed to have Alice as a valid target, then we do a random event
			limit = {
				event_target:its_alice = { 
					character = yes
				}
			}
			random_list = {
				10 = {
					# Nothing happens
				}
				50 = {
					modifier = {
						factor = 0 # zeroes out to not be an option if we've already introduced the Queen, or if Alice is dead
						OR = {
							event_target:its_alice = { is_alive = no }
							has_global_flag = dw_queenofhearts_spawned
						}
					}
					narrative_event = { id = DWFairyTales.2020 }
				}
			}
		}
	}
}
# .2020 Player meets the Red Queen
narrative_event = {
	id = DWFairyTales.2020
	desc = "DWFairyTales2020"
	picture = wonderland_queen_portrait
	title = dw_ck2_wonderland
	is_triggered_only = yes # Triggered by .2011
	immediate = {
		set_global_flag = dw_queenofhearts_spawned
	}
	option = { # Of course you can stay. I welcome someone with your class.
		name = "DWFairyTales2020A"
		character_event = { id = DWFairyTales.14 }
		if = {
			limit = {
				is_female = no # If our ruler is a male, they'll be approached by the Queen after a short period to be invited to be her lover
				is_married = no # And if our ruler is single
			}
			hidden_tooltip = {
				narrative_event = { id = DWFairyTales.2030 days = 10}
			}
		}
		if = {
			limit = {
				is_female = no # If our ruler is a male, they'll be approached by the Queen after a short period to be invited to be her lover
				is_married = yes # And if our ruler is married, we get different text
			}
			hidden_tooltip = {
				narrative_event = { id = DWFairyTales.2035 days = 10}
			}
		}
	}
	option = { # Off with her head!
		name = "DWFairyTales2020B"
		# Since the global flag was set, there isn't anything really special about this option, other than it ensures that the Queen of Hearts doesn't appear anywhere in the game.
	}
	option = { # Um, no. Leave my lands.
		name = "DWFairyTales2020C"
		hidden_tooltip = {
			random_independent_ruler = {
				limit = {
					ai = yes
					is_within_diplo_range = ROOT
				}
				character_event = { id = DWFairyTales.14 }
			}
		}
	}
}
# .2030 Red Queen offers herself to become a male player's lover, and potentially even their spouse
narrative_event = {
	id = DWFairyTales.2030
	desc = "DWFairyTales2030"
	picture = wonderland_queen_portrait
	title = dw_ck2_wonderland
	is_triggered_only = yes # Triggered by .2020
	trigger = {
		is_adult = yes # Lovers and marriage talk for adults only
	}
	immediate = {
		if = { # We first we find the Queen and set her as an event target if she's present.
			limit = {
				any_courtier = {
					has_character_flag = dw_npc_queenofhearts
				}
			}
			random_courtier = {
				limit = {
					has_character_flag = dw_npc_queenofhearts
				}
				save_event_target_as = its_queenie
			}
		}
	}
	option = { # Forget being lovers, let's get married!
		trigger = {
			is_married = no # Just to ensure the ruler didn't get married in the 10 day wait period
		}
		name = "DWFairyTales2030A"
		add_spouse = event_target:its_queenie
		narrative_event = { id = DWFairyTales.2037 }
	}
	option = { # Lovers sounds like a good first step
		name = "DWFairyTales2030B"
		add_lover = event_target:its_queenie
		narrative_event = { id = DWFairyTales.2037 }
	}
	option = { # Um, no.
		name = "DWFairyTales2030C"
	}
}
# .2035 Red Queen offers herself to become a male player's lover, player is married
narrative_event = {
	id = DWFairyTales.2035
	desc = "DWFairyTales2035"
	picture = wonderland_queen_portrait
	title = dw_ck2_wonderland
	is_triggered_only = yes # Triggered by .2020
	trigger = {
		is_adult = yes # Lovers and marriage talk for adults only
	}
	immediate = {
		if = { # We first we find the Queen and set her as an event target if she's present.
			limit = {
				any_courtier = {
					has_character_flag = dw_npc_queenofhearts
				}
			}
			random_courtier = {
				limit = {
					has_character_flag = dw_npc_queenofhearts
				}
				save_event_target_as = its_queenie
			}
		}
	}
	option = { # Lovers sounds like a good first step
		name = "DWFairyTales2030A"
		add_lover = event_target:its_queenie
		narrative_event = { id = DWFairyTales.2037 }
	}
	option = { # Um, no.
		name = "DWFairyTales2030B"
	}
}

# .2037 Red Queen seduces her new love
narrative_event = {
	id = DWFairyTales.2037
	desc = "DWFairyTales2037"
	picture = wonderland_queen_lounging
	title = dw_ck2_wonderland
	is_triggered_only = yes # Triggered by .2030 / .2035
	option = { # I'm in there! - Pregnancy check
		trigger = {
			OR = {
				is_female = no # A dude
				trait = futa # or a chick with a dick
			}
		}
		name = "DWFairyTales2037A"
		hidden_tooltip = { event_target:its_queenie = { character_event = { id = DWCore.9000 }}} # Pregnancy check
	}
	option = { # Oh boy. Let's slow our roll. - No Pregnancy check
		trigger = {
			OR = {
				is_female = no # A dude
				trait = futa # or a chick with a dick
			}
		}
		name = "DWFairyTales2037B"
	}
	option = { # No pregnancy potential
		trigger = {
			is_female = yes
			NOT = { trait = futa }
		}
		name = "DWFairyTales2037C"
	}
}
