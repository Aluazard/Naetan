#character
on_startup = {
	events = {
		DWBody.30 #Virgin trait assignment
	}
}

# Fires when the game starts (not from saves)
on_chronicle_start = {
	events = {
	}
}

#character
on_yearly_pulse = {
	events = {
		DWBody.30 #Virgin trait assignment
	}
}

#character
on_bi_yearly_pulse = {
}

#character
on_five_year_pulse = {
}

# character
on_decade_pulse = {
}

# character
on_adulthood = {
	events = {
		DWBody.30 #Virgin trait assignment
	}
}

# character
on_birth = {
	events = {
	}
}

# Sent to employers of both spouses - ROOT is employer. FROM is employers "employee". new_character is the other spouse.
on_marriage = {
	events = {
		DWBody.33 #Virgin trait removal
 	}
}

#character (at 2 months)
on_pregnancy = {
	events = {
		DWBody.35 #Virgin trait removal
 	}
}

# When a pagan ruler forces a prisoner to be his consort
on_forced_consort = {
	events = {
		DWBody.33 #Virgin trait removal
	}
}

# Fires for the owner of the winning unit (ROOT). The taken Holding title is in FROM.
on_siege_over_winner = {
	events = {
	}
}

on_death = {
	events = {
	}
}

# Fires every two years for characters who are members of any society
on_society_bi_yearly_pulse = {
}

# A character has switched their society interest
# Root = Character
# From = Society
on_character_switch_society_interest = {
	events = {
	}
}

# A character ranks up in their society, or becomes grandmaster
# Root = Character
# From = Society
on_character_society_rank_up = {
	events = {
	}
}

# A character ranks down in their society
# Root = Character
# From = Society
on_character_society_rank_down = {
	events = {
	}
}

# A character joins a society. The has_game_started trigger can be useful to avoid firing events from auto-assignment of characters at game start
# Root = Character
# From = Society
on_character_join_society = {
	events = {
	}
}

# A character leaves or is forced to leave a society
# Root = Character
# From = Society
on_character_leave_society = {
	events = {
	}
}
# A character asks to join a society. Only works on player
# Root = Character
# From = Society
on_character_ask_to_join_society = {
	events = {
	}
}

# A character is removed from society for failing the potential trigger.
# Root = Character
# From = Society
on_character_kicked_from_society = {
	events = {
	}
}

# A character stops showing interest in a society for failing the CanJoin trigger.
# Root = Character
# From = Society
on_character_stop_showing_interest = {
	events = {
	}
}

# Someone joins a society that has no members
# Root = Character
# From = Society
on_society_created = {
	events = {
	}
}

# The last member of a society leaves the society and is not replaced
# Root = Character
# From = Society
on_society_destroyed = {
	events = {
	}
}

on_become_imprisoned_any_reason = {
	events = {
		dw_hvevents.100 # Handles players characters imprisoned by others
	}
}

### on combat pulse
#FROM is the character who is the commander of the opposing side
#FROMFROM is the character who is the LIEGE of the commander of the opposing side
on_combat_pulse = {
	random_events = {
		500 = dw_randomevent.130 # Hela Appears - Potential Villain Recruit
	}
}
