#character
on_startup = {
	events = {
		DWCore.1 # Sets the global value of Dark_World_Reborn_Present for mods that want to verify Dark World Reborn is present
		DWCore.30 #Virgin trait assignment
		DWFairyTales.90 # Handles the random seeding of some NPC's
		DWLilith.5 # Creates Mother Lilith and places her over the offmap power
		DWMana.5 # Creates the Wellspring and places it over the offmap power
	}
}

# Fires when the game starts (not from saves)
on_chronicle_start = {
	events = {
	}
}

#character
on_yearly_pulse = {
	events = {
		DWCore.39 #Virgin trait assignment revisited to see if anyone needs to lose it
		DWNight.1000 #Fenris appears in a random realm that isn't the player's (hopefully)
		DWWerewolf.1 # Check to see if the beast forces those who hear its whispers to act.
		DWWhoring.1009 # Old whores retire
		DWNight.4999 # Vampire's lose a point of health due to the cost of the power required to continue to fuel their existence.
	}
}

#character
on_bi_yearly_pulse = {
	events = {
		DWNight.2000 #Vladimir appears in a random realm that is the player's
	}
	random_events = {
		#Dark World Fairy Tales Events
		100 = DWFairyTales.100 # Beauty and the Beast
		100 = DWFairyTales.2000 # Wonderland
	}
}

#character
on_five_year_pulse = {
	random_events = {
		50 = DWNight.1100 # Female Ruler may be visited by Fenris
		100 = DWCourt.300 # Bordello Improvement Event Chain
		100 = DWCourt.3100 # Marshall has a morale building idea
		100 = DWFuta.100 #Futa merchant event
	}
}

# character
on_decade_pulse = {
	random_events = {
		100 = DWNight.4000 # Player hunted by a vampire
		100 = DWNight.4800 # Introducing Vampirella, Daughter of Lilith
		100 = DWNight.5500 # Introducing Bloodrayne
	}
}

# character
on_adulthood = {
	events = {
		DWCore.31 #Virgin trait assignment
		DWCore.8010 #Custom portrait / modifier upon becoming an adult for certain traits
	}
}

# character
on_birth = {
	events = { 
		DWCore.8000 #Checking racial trait assignment at birth
		DWCore.8200 # Serpent's Purge (alchemy potion effect) or any similar still birth magic
	}
}

# Sent to employers of both spouses - ROOT is employer. FROM is employers "employee". new_character is the other spouse.
on_marriage = {
	events = {
		DWCore.33 #Virgin trait removal
 		DWCourt.900 # Jus Primae Noctis (Right of the first night)
 	}
}

#character (at 2 months)
on_pregnancy = {
	events = {
		DWCore.35 #Virgin trait removal
 	}
}

# When a pagan ruler forces a prisoner to be his consort
on_forced_consort = {
	events = {
		DWCore.37 #Virgin trait removal
	}
}

# Fires for the owner of the winning unit (ROOT). The taken Holding title is in FROM.
on_siege_over_winner = {
	events = {
	}
}

on_death = {
	events = {
		DWSOC.1415 #Announces hermetics apprentice death
	}
}

# Fires every two years for characters who are members of any society
on_society_bi_yearly_pulse = {
	events = {
		DWSOC.1000 # Wizards College quest tombola
		DWSOC.7200 # Chosen of Lilith quest tombola
		DWSOC.7000 # Society Corruption chance - multiple societies
	}
	
	random_events = {
		100 = DWSOC.20000 # Chosen of Lilith: Orgy
		100 = DWSOC.20010 # Chosen of Lilith: Night on the Town
		75 = DWSOC.20030 # Chosen of Lilith: Grand Summoning
		100 = DWSOC.20060 # Chosen of Lilith: Infernal Choir (only with Rivals)
		75 = DWSOC.7854 # Chosen of Lilith: Demon Hunters Attack
		50 = DWSOC.1620 # Wizards College: Divine Summoning
		50 = DWSOC.1460 # Wizards College: Gathering of the Minds
		150 = 0 # Nothing
	}
}

# A character has switched their society interest
# Root = Character
# From = Society
on_character_switch_society_interest = {
	events = {
		DWSOC.90 #Interest shown in Dark World Societies
	}
}

# A character ranks up in their society, or becomes grandmaster
# Root = Character
# From = Society
on_character_society_rank_up = {
	events = {
	}
}

# A character ranks down in their society
# Root = Character
# From = Society
on_character_society_rank_down = {
	events = {
	}
}

# A character joins a society. The has_game_started trigger can be useful to avoid firing events from auto-assignment of characters at game start
# Root = Character
# From = Society
on_character_join_society = {
	events = {
	}
}

# A character leaves or is forced to leave a society
# Root = Character
# From = Society
on_character_leave_society = {
	events = {
	}
}
# A character asks to join a society. Only works on player
# Root = Character
# From = Society
on_character_ask_to_join_society = {
	events = {
	}
}

# A character is removed from society for failing the potential trigger.
# Root = Character
# From = Society
on_character_kicked_from_society = {
	events = {
	}
}

# A character stops showing interest in a society for failing the CanJoin trigger.
# Root = Character
# From = Society
on_character_stop_showing_interest = {
	events = {
	}
}

# Someone joins a society that has no members
# Root = Character
# From = Society
on_society_created = {
	events = {
	}
}

# The last member of a society leaves the society and is not replaced
# Root = Character
# From = Society
on_society_destroyed = {
	events = {
	}
}

