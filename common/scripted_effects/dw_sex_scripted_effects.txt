# Pregnancy check
dw_impregnate_check = {
	# Expects event targets
	# event_target:new_dad - is the one with the cock doing the seeding (such as a male or a futa)
	# event_target:new_mom - is the one being seeded (a female - could technically be a guy, but I think CK2 purges pregnant status from males)
	# First we check to even see if someone has a chance of getting pregnant
	if = {
		limit = {
			event_target:new_mom = {
				OR = {  # Woman can't be over 45+ unless they're immortal
					NOT = { age = 45 }
					trait = immortal
				}
				is_pregnant = no # Can't already be pregnant
				health = 3 # body healthy enough for child birth
				fertility = 0.01 # At least a 1% chance
			}
			event_target:new_dad = {
				fertility = 0.01 # At least a 1% chance
			}
		}

		# We get mom's fertility rating, and prep it for combining with dad.
		export_to_variable = { which = mom_fertility value = fertility who = event_target:new_mom }
		# We get dad's fertility rating, and prep it for combining with mom.
		export_to_variable = { which = dad_fertility value = fertility who = event_target:new_dad }
		#We use mom's rating to set the preggers_chance variable
		set_variable = { which = preggers_chance which = mom_fertility }
		# We then add dad's to the preggers_chance
		change_variable = { which = preggers_chance which = dad_fertility }
		# We divide by two to get a simple percentage
		divide_variable = { which = preggers_chance value = 2 }
		# Then we multiply it in order to give us something to use as our random chance rating
		multiply_variable = { which = preggers_chance value = 100 }

		# Now we determine if it's a 'normal' pregnancy versus a cuck one
		if = {
			limit = {
				event_target:new_mom = {
					OR = {
						AND = {
							is_married = no
							is_consort = no
						}
						AND = {
							is_consort = yes
							consort = { character = event_target:new_dad }
						}
						AND = {
							is_married = yes
							spouse = { character = event_target:new_dad }
						}
					}
				}
			}
			if = {
				limit = { random < preggers_chance }
				# The pregnancy happens
				event_target:new_mom = { impregnate = event_target:new_dad } # Scope gets impregnated by the value
			}
		}
		#event_target:new_mom is consort/spouse of someone else than event_target:new_dad
		else = {
			if = {
				limit = { random < preggers_chance }
				# The pregnancy happens
				event_target:new_mom = { impregnate_cuckoo = event_target:new_dad } # Scope gets impregnated by the value
			}
		}
	}
	# And lastly Remove Virgin trait if it's present
	event_target:new_mom = { remove_virginity_trait = yes }
	event_target:new_dad = { remove_virginity_trait = yes }
}
dw_impregnate_check_solo = {
    # When a female has the chance to be knocked up by a non-existant character (not an NPC - such as a commoner not in court)
	# Expects event targets
	# event_target:new_mom - is the one being seeded (a female - could technically be a guy, but I think CK2 purges pregnant status from males)
	# First we check to even see if someone has a chance of getting pregnant
	if = {
		limit = {
			event_target:new_mom = {
				OR = {  # Woman can't be over 45+ unless they're immortal
					NOT = { age = 45 }
					trait = immortal
				}
				is_pregnant = no # Can't already be pregnant
				health = 3 # body healthy enough for child birth
				fertility = 0.01 # At least a 1% chance
			}
		}

		# We get mom's fertility rating
		export_to_variable = { which = mom_fertility value = fertility who = event_target:new_mom }
		#We use mom's rating to set the preggers_chance variable
		set_variable = { which = preggers_chance which = mom_fertility }
		# Then we multiply it in order to give us something to use as our random chance rating
		multiply_variable = { which = preggers_chance value = 100 }

		# Now we determine if it's a 'normal' pregnancy versus a cuck one
		if = {
			limit = {
				event_target:new_mom = {
					is_married = no
					is_consort = no
				}
			}
			if = {
				limit = { random < preggers_chance }
				# The pregnancy happens
				event_target:new_mom = { impregnate = yes } # Makes someone pregnant, father unknown
			}
		}
		#event_target:new_mom is consort/spouse of someone else than event_target:new_dad
		else = {
			if = {
				limit = { random < preggers_chance }
				# The pregnancy happens
				event_target:new_mom = { impregnate_cuckoo = yes }
			}
		}
	}
	# And lastly Remove Virgin trait if it's present
	event_target:new_mom = { remove_virginity_trait = yes }
}
dw_clear_animal_pregnancy_flags = {
    clr_character_flag = dw_animal_pregnancy # This one is used by the dw_impregnate_check_from_beast
    clr_character_flag = dw_pregnancy_dog
    clr_character_flag = dw_pregnancy_horse
    clr_character_flag = dw_pregnancy_cat
    clr_character_flag = dw_pregnancy_hyena
    clr_character_flag = dw_pregnancy_wolf
}
dw_impregnate_check_from_beast = {
    # When a female has the chance to be knocked up by a non-existant character (not an NPC - such as a commoner not in court)
	# Expects event targets
	# event_target:new_mom - is the one being seeded (a female - could technically be a guy, but I think CK2 purges pregnant status from males)
    # This assumes that a flag has been set identifying the type of animal - ie dw_pregnancy_xxxxx
	# First we check to even see if someone has a chance of getting pregnant
	if = {
		limit = {
			event_target:new_mom = {
				OR = {  # Woman can't be over 45+ unless they're immortal
					NOT = { age = 45 }
					trait = immortal
				}
				is_pregnant = no # Can't already be pregnant
				health = 3 # body healthy enough for child birth
				fertility = 0.01 # At least a 1% chance
			}
		}

		# We get mom's fertility rating
		export_to_variable = { which = mom_fertility value = fertility who = event_target:new_mom }
		#We use mom's rating to set the preggers_chance variable
		set_variable = { which = preggers_chance which = mom_fertility }
		# Then we multiply it in order to give us something to use as our random chance rating
		multiply_variable = { which = preggers_chance value = 100 }

		# Now we determine if it's a 'normal' pregnancy versus a cuck one
		if = {
			limit = {
				event_target:new_mom = {
					is_married = no
					is_consort = no
				}
			}
			if = {
				limit = { random < preggers_chance }
				# The pregnancy happens
				event_target:new_mom = { # Makes someone pregnant, father unknown
                    impregnate = yes
                    set_character_flag = dw_animal_pregnancy
                }
			}
            else = {
                # If they don't become pregnant, we want to clear flags
                dw_clear_animal_pregnancy_flags = yes
            }
		}
		#event_target:new_mom is consort/spouse of someone else than event_target:new_dad
		else = {
			if = {
				limit = { random < preggers_chance }
				# The pregnancy happens
				event_target:new_mom = {
                    impregnate_cuckoo = yes
                    set_character_flag = dw_animal_pregnancy
                }
			}
            else = {
                # If they don't become pregnant, we want to clear flags
                dw_clear_animal_pregnancy_flags = yes
            }
		}
	}
	# And lastly Remove Virgin trait if it's present
	event_target:new_mom = { remove_virginity_trait = yes }
	event_target:new_dad = { remove_virginity_trait = yes }
}
